{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"SSLMate Cert Spotter",
    "Metadata":{
        "SourceCode": "https://github.com/SSLMate/certspotter",
        "Todo1":"Add mozdef event emission instead of email",
        "Todo2":"Convert to AWS lambda function",
        "Todo3":"Add heartbeat/watchdog to detect if the cronjob stops working"
    },
    "Parameters":{
        "SSHKeyName":{
            "Description":"SSH Key Name",
            "Type":"String"
        },
        "SESRegion":{
            "Description":"The AWS region to use for sending email with SES",
            "AllowedValues":[
                "us-east-1",
                "us-west-2",
                "eu-west-1"
            ],
            "Default":"us-west-2",
            "Type":"String"
        },
        "FromEmailAddress":{
            "Description":"Email address to send reports as",
            "Type":"String"
        },
        "ToEmailAddress":{
            "Description":"Email address to send reports to",
            "Type":"String"
        },
        "WatchList":{
            "Description":"Comma delimited list of domains to watch",
            "Type":"CommaDelimitedList",
            "Default":".mozilla.com, .mozilla.org, .mozilla.net, .firefox.com, .getfirefox.com"
        },
        "CronSchedule":{
            "Description":"The 5 field crontab schedule for running certspotter",
            "Type":"String",
            "Default":"0 * * * *"
        }
    },
    "Mappings":{
        "RegionMap":{
            "us-east-1":{
                "CentOS7x8664withUpdatesHVM":"ami-6d1c2007"
            },
            "us-west-2":{
                "CentOS7x8664withUpdatesHVM":"ami-d2c924b2"
            },
            "us-west-1":{
                "CentOS7x8664withUpdatesHVM":"ami-af4333cf"
            },
            "eu-central-1":{
                "CentOS7x8664withUpdatesHVM":"ami-9bf712f4"
            },
            "eu-west-1":{
                "CentOS7x8664withUpdatesHVM":"ami-7abd0209"
            },
            "ap-southeast-1":{
                "CentOS7x8664withUpdatesHVM":"ami-f068a193"
            },
            "ap-southeast-2":{
                "CentOS7x8664withUpdatesHVM":"ami-fedafc9d"
            },
            "ap-northeast-1":{
                "CentOS7x8664withUpdatesHVM":"ami-eec1c380"
            },
            "ap-northeast-2":{
                "CentOS7x8664withUpdatesHVM":"ami-c74789a9"
            },
            "sa-east-1":{
                "CentOS7x8664withUpdatesHVM":"ami-26b93b4a"
            }
        }
    },
    "Resources":{
        "SecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"Security Group",
                "SecurityGroupIngress":[
                    {
                        "FromPort":"22",
                        "IpProtocol":"tcp",
                        "CidrIp":"0.0.0.0/0",
                        "ToPort":"22"
                    }
                ]
            }
        },
        "IAMRole":{
            "Type":"AWS::IAM::Role",
            "Properties":{
                "AssumeRolePolicyDocument":{
                    "Version":"2012-10-17",
                    "Statement":[
                        {
                            "Effect":"Allow",
                            "Principal":{
                                "Service":[
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action":[
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies":[
                    {
                        "PolicyName":"SESSend",
                        "PolicyDocument":{
                            "Version":"2012-10-17",
                            "Statement":[
                                {
                                    "Effect":"Allow",
                                    "Action":"ses:Send*",
                                    "Resource":"*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "InstanceProfile":{
            "Type":"AWS::IAM::InstanceProfile",
            "Properties":{
                "Roles":[
                    {
                        "Ref":"IAMRole"
                    }
                ]
            }
        },
        "Instance":{
            "Type":"AWS::EC2::Instance",
            "Properties":{
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionMap",
                        {
                            "Ref":"AWS::Region"
                        },
                        "CentOS7x8664withUpdatesHVM"
                    ]
                },
                "InstanceType":"t2.micro",
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"certspotter"
                    }
                ],
                "KeyName":{
                    "Ref":"SSHKeyName"
                },
                "SecurityGroups":[
                    {
                        "Ref":"SecurityGroup"
                    }
                ],
                "IamInstanceProfile":{
                    "Ref":"InstanceProfile"
                },
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "for i in {1..3}; do /usr/bin/easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz 2>&1 >> /var/log/initial_user-data.log && break || sleep 10; done\n",
                                "cat << EOF > /etc/cron.d/certspotter\n",
                                {
                                    "Ref":"CronSchedule"
                                },
                                " centos /home/centos/gocode/bin/certspotter 2>&1 | /home/centos/send_email.py ",
                                {
                                    "Ref":"SESRegion"
                                },
                                " ",
                                {
                                    "Ref":"FromEmailAddress"
                                },
                                " ",
                                {
                                    "Ref":"ToEmailAddress"
                                },
                                "\n",
                                "EOF\n",
                                "yum --assumeyes install golang git\n",
                                "install --owner=centos --group=centos --directory /home/centos/gocode\n",
                                "install --owner=centos --group=centos --directory /home/centos/.certspotter\n",
                                "install --owner=centos --group=centos --mode=0644 /dev/null /home/centos/.certspotter/watchlist\n",
                                "echo \"",
                                {
                                    "Fn::Join":[
                                        "\n",
                                        {
                                            "Ref":"WatchList"
                                        }
                                    ]
                                },
                                "\" > /home/centos/.certspotter/watchlist\n",
                                "export GOPATH=/home/centos/gocode\n",
                                "/usr/bin/go get software.sslmate.com/src/certspotter/cmd/certspotter\n",
                                "install --owner=centos --group=centos --mode=0755 /dev/null /home/centos/send_email.py\n",
                                "cat << EOF > /home/centos/send_email.py\n",
                                "#!/usr/bin/env python\n",
                                "import sys, boto.ses, boto.utils\n",
                                "b=sys.stdin.read()\n",
                                "m=boto.utils.get_instance_metadata()\n",
                                "_=boto.ses.connect_to_region(sys.argv[1]).send_email(sys.argv[2], 'Certspotter Report', 'Sender : %s : %s : %s\\nCode : https://github.com/SSLMate/certspotter\\n\\n' % (m['public-hostname'], m['instance-id'], m['iam']['info']['InstanceProfileArn']) + b, sys.argv[3]) if len(b) > 0 else False\n",
                                "EOF\n",
                                "touch /etc/cron.d/certspotter\n",
                                "/usr/bin/cfn-signal '",
                                {
                                    "Ref":"WaitConditionHandle"
                                },
                                "' 2>&1 >> /var/log/initial_user-data.log\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WaitConditionHandle":{
            "Type":"AWS::CloudFormation::WaitConditionHandle"
        },
        "WaitCondition":{
            "Type":"AWS::CloudFormation::WaitCondition",
            "DependsOn":"Instance",
            "Properties":{
                "Handle":{
                    "Ref":"WaitConditionHandle"
                },
                "Timeout":"300"
            }
        }
    },
    "Outputs":{
        "CloudInitOutput":{
            "Description":"The data returned to the WaitConditionHandle from Cloud Init",
            "Value":{
                "Fn::GetAtt":[
                    "WaitCondition",
                    "Data"
                ]
            }
        }
    }
}